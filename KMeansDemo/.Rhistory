shiny::runApp()
runApp()
shiny::runApp()
runApp()
library(shiny)
# Implement 1 >> source your models.R file here to get access to functions related to your model
ui <- fluidPage(
# Application title
titlePanel("k-means Demo"),
# Sidebar with inputs
sidebarLayout(
sidebarPanel(
#you can load an image placed in www directory and similarly access the css and js placed inside www
tags$img(src="logo.png", height="50px", width="50px"),
selectInput('xcol', 'X Variable', names(iris)),
selectInput('ycol', 'Y Variable', names(iris),
selected=names(iris)[[2]]),
numericInput('clusters', 'Cluster count', 3,
min = 1, max = 9)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("clusterPlot")
)
)
)
# Define server logic here
server <- function(input, output) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
iris[, c(input$xcol, input$ycol)]
})
clusters <- reactive({
#this code will not work until clusterData() is implemented in models.R
clusterData(r_data = selectedData(), num_clusters = input$clusters)
})
output$clusterPlot <- renderPlot({
palette(c("#E41A1C", "#377EB8", "#4DAF4A", "#984EA3",
"#FF7F00", "#FFFF33", "#A65628", "#F781BF", "#999999"))
par(mar = c(5.1, 4.1, 0, 1))
plot(selectedData(),
col = clusters()$cluster,
pch = 20, cex = 3)
points(clusters()$centers, pch = 4, cex = 4, lwd = 4)
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp()
clusters <- reactive({
#this code will not work until clusterData() is implemented in models.R
clusterData(r_data = selectedData(), num_clusters = input$clusters)
})
server <- function(input, output) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
iris[, c(input$xcol, input$ycol)]
})
clusters <- reactive({
#this code will not work until clusterData() is implemented in models.R
clusterData(r_data = selectedData(), num_clusters = input$clusters)
})
output$clusterPlot <- renderPlot({
palette(c("#E41A1C", "#377EB8", "#4DAF4A", "#984EA3",
"#FF7F00", "#FFFF33", "#A65628", "#F781BF", "#999999"))
par(mar = c(5.1, 4.1, 0, 1))
plot(selectedData(),
col = clusters()$cluster,
pch = 20, cex = 3)
points(clusters()$centers, pch = 4, cex = 4, lwd = 4)
})
}
runApp()
runApp()
source('C:/Users/dcvr1/OneDrive - IIIT Bangalore/7th semester/DA/project/KMeansDemo/models.R')
runApp()
data <- read.csv("file:///C:/Users/dcvr1/OneDrive - IIIT Bangalore/7th semester/DA/project/cleaneddata14_16_v2.csv")
library(klaR)
runApp()
data <- read.csv("file:///C:/Users/dcvr1/OneDrive - IIIT Bangalore/7th semester/DA/project/cleaneddata14_16_v2.csv",header = FALSE)
runApp()
source('C:/Users/dcvr1/OneDrive - IIIT Bangalore/7th semester/DA/project/KMeansDemo/models.R')
runApp()
