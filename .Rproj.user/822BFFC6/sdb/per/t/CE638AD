{
    "collab_server" : "",
    "contents" : "data <- read.csv(\"data14_16.csv\")\nstr(data)\n\n\n\nlibrary(data.table)\nlibrary(magrittr)\nlibrary(stringr)\nlibrary(plyr)\n\n# Removing Comments attribute\ndata <- data[,!names(data) %in% \"comments\"]\n\n\n#outlier removal function\ndata$Age %>% unique() # observation has some non numeric rows\n# Replacing non numeric rows to Na's\ndata$Age = as.numeric(as.character(data$Age)) \n# Removing the outliers in Age\nreplacing_rows = which(data$Age > 99 | data$Age < 1)\nset(data,replacing_rows,\"Age\",NA)\n\n# convert age to categorical variable\n# 4 age groups\n# 0-20, 20-35, 35-65, 65+\ndata$Age <- cut(data$Age, breaks=c(-Inf,20,35,65,Inf),labels=c(\"0-20\",\"20-35\",\"35-65\",\"65+\"))\n\n# Converting 49 Gender levels to 3\n# Gender levels Male, Female, Trans\n\ndata$Gender %<>% str_to_lower() %>% str_trim()\ndata$Gender %>% unique()\n\nmale_str <- c(\"male\", \"m\", \"male-ish\", \"maile\", \"mal\", \"male (cis)\",\"m|\", \"sex is male\", \"male.\",\"make\", \"male \", \"man\",\"msle\", \"mail\", \"malr\",\"cis man\", \"cis male\",\"cisdude\",\"dude\")\ntrans_str <- c(\"trans-female\",\"bigender\", \"something kinda male?\", \"queer/she/they\", \"non-binary\",\"nah\", \"all\", \"enby\",\"transgender woman\", \"fluid\",\"nonbinary\",\"genderqueer\", \"androgyne\", \"agender\", \"male leaning androgynous\", \"guy (-ish) ^_^\", \"trans woman\", \"neuter\", \"female (trans)\", \"nb masculine\",\"male 9:1 female, roughly\",\"queer\", \"mtf\" ,\"female or multi-gender femme\",\"androgynous\",\"other\",\"genderfluid\" ,\"ostensibly male, unsure what that really means\",\"genderfluid (born female)\"  )\nfemale_str <- c(\"cis female\", \"f\",\"fem\", \"female\",\"female/woman\", \"cisgender female\",\"woman\",\"fm\",  \"femake\", \"female \",\"cis-female/femme\", \"female (cis)\", \"femail\",\"cis-woman\",\"fem\",\"cisgender female\")\ninvalid_str <- c(\"p\",\"a little about you\",\"n/a\",\"none of your business\",\"human\",\"afab\")\n\ndata$Gender <- sapply(as.vector(data$Gender),function(x){\n  if(x %in% male_str ){\n    \"male\"\n  } else if(x %in% female_str){\n    \"female\"\n  } else if(x %in% trans_str){\n    \"trans\"\n  } else {\n    NA\n  }\n})\n#converting Gender to Factor variable\ndata$Gender <- as.factor(data$Gender)\n\n\n#converting Timestamp to Factor\ndata$Timestamp <- as.factor(data$Timestamp)\n\n# no_employees\n# 01-May is 1-5,Jun-25 is 6-25,More than 1000 is 1000+,'' is NA\nlevels(data$no_employees)[levels(data$no_employees)==\"01-May\"] <- \"1-5\"\nlevels(data$no_employees)[levels(data$no_employees)==\"Jun-25\"] <- \"6-25\"\nlevels(data$no_employees)[levels(data$no_employees)==\"More than 1000\"] <- \"1000+\"\nlevels(data$no_employees)[levels(data$no_employees)==\"\"] <- NA\ncount(data$no_employees)\n\n# State is valid only for USA \n# Converting all the state codes to Names\n\n# To do string operations converting the state to char\ndata$state %<>% as.factor()\nstatecode_toname = function(x){\n  if (is.null(x) || is.na(x) || x==\"\"){\n    NA\n  }else if(nchar(x) == 2){\n    state.name[match(x,state.abb)]\n  }else{\n    x\n  }\n}\ndata$state <- sapply(as.vector(data$state) ,statecode_toname)\ndata$state %<>% as.factor()\n\n\nstr(data)\n\n\n# 0,1,Yes,No\n# Self_employed,benefits,\n\n\nchange5 = function(x){\n  if (is.null(x) || is.na(x) || x==\"\"){\n    NA\n  }else if(x==\"0\"|x==\"No\"){\n    \"No\"\n  }else if(x==\"1\"|x==\"Yes\"){\n    \"Yes\"\n  }else if(x==\"I am not sure\"| x == \"Not sure\" | \n           x==\"Don't know\" | x==\"I don't know\" | x==\"Maybe\"){\n    \"Maybe\"\n  }else if(x==\"Some of them\"){\n    \"Some of them\"\n  }else{\n    NA\n  }\n}\n\n\ndata$benefits <- sapply(as.vector(data$benefits),change5)\ndata$benefits %<>% as.factor()\n\ndata$self_employed <- sapply(as.vector(data$self_employed),change5)\ndata$self_employed %<>% as.factor()\n\ndata$mental_illness <-sapply(as.vector(data$mental_illness),change5)\ndata$mental_illness %<>% as.factor()\n\ndata$seek_help <- sapply(as.vector(data$seek_help),change5)\ndata$seek_help %<>% as.factor()\n\ndata$phys_health_consequence <- sapply(as.vector(data$phys_health_consequence),change5)\ndata$phys_health_consequence %<>% as.factor()\n\ndata$mental_health_consequence <- sapply(as.vector(data$mental_health_consequence),change5)\ndata$mental_health_consequence %<>% as.factor()\n\ndata$mental_vs_physical <- sapply(as.vector(data$mental_vs_physical),change5)\ndata$mental_vs_physical %<>% as.factor()\n\ndata$coworkers <- sapply(as.vector(data$coworkers),change5)\ndata$coworkers %<>% as.factor()\n\ndata$supervisor <- sapply(as.vector(data$supervisor),change5)\ndata$supervisor %<>% as.factor()\n\ndata$family_history <- sapply(as.vector(data$family_history),change5)\ndata$family_history %<>% as.factor()\n\ndata$tech_company <-sapply(as.vector(data$tech_company),change5)\ndata$tech_company %<>% as.factor()\n\ndata$care_options <- sapply(as.vector(data$care_options),change5)\ndata$care_options %<>% as.factor()\n\ndata$wellness_program <- sapply(as.vector(data$wellness_program),change5)\ndata$wellness_program %<>% as.factor()\n\ndata$mental_health_interview <- sapply(as.vector(data$mental_health_interview),change5)\ndata$mental_health_interview %<>% as.factor()\n\ndata$work_interfere <- sapply(as.vector(data$work_interfere),function(x){\n  if(is.na(x) | is.null(x) | x == \"\") NA\n  else if(x==\"Never\"| x==\"Not applicable to me\") \"Never\"\n  else x\n})\ndata$work_interfere %<>% as.factor()\n\ndata$remote_work <-sapply(as.vector(data$remote_work),function(x){\n  if(is.na(x) | is.null(x) |x == \"\") NA\n  else if(x==\"Never\" | x== \"No\") \"No\"\n  else if(x==\"Always\"| x==\"Yes\") \"Yes\"\n  else if(x==\"Sometimes\") \"Sometimes\"\n  else NA\n})\ndata$remote_work %<>% as.factor()\n\ndata$leave <- sapply(as.vector(data$leave),function(x){\n  if(is.na(x) | is.null(x) | x=='') NA\n  else if(x==\"Don't know\" | x== \"I don't know\") \"Don't know\"\n  else x\n})\ndata$leave %<>% as.factor()\n\nstr(data$mental_health_interview)\nstr(data)\ncount(data$mental_health_interview)\ndata$mental_illness%>% unique()\n\ncount(data$mental_illness)\nnrow(data [as.vector(which(!is.na(data$state))),])\nunused_attributes <- c(\"state\",\"coworkers\",\"supervisor\",\"care_options\")\ntemp <- data [,!names(data) %in% unused_attributes ]\ntemp <- temp[complete.cases(temp),]\nsapply(data,function(x){ sum(is.na(x)) })\n\n\n\n",
    "created" : 1509882426473.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2403851978",
    "id" : "CE638AD",
    "lastKnownWriteTime" : 1509882524,
    "last_content_update" : 1509882524127,
    "path" : "C:/Users/dcvr1/OneDrive - IIIT Bangalore/7th semester/DA/project/cleaning.R",
    "project_path" : "cleaning.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}